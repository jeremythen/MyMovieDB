{
	"info": {
		"_postman_id": "f9cff475-6d44-45b0-a6bb-402fa2b27b2c",
		"name": "MyMovieDB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Movies",
			"item": [
				{
					"name": "Reviews",
					"item": [
						{
							"name": "Get Reviews",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/1/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Review",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"movieId\": 1,\r\n    \"reviewerStars\": 5,\r\n    \"comment\": \"Test review cmment for movie 2331516651\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/movies/1/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Review By Movie Id and Reviewer Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/1/reviews/reviewer/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"reviews",
										"reviewer",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Reviews By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/reviews/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"reviews",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Reviewers reviews",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/reviews/reviewer/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"reviews",
										"reviewer",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Pagination",
					"item": [
						{
							"name": "Get Movies With Offset",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/pagination/offset/3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"pagination",
										"offset",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Movies With Pagination offset and limit",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/pagination/limit/5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"pagination",
										"limit",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Movies Up To Limit",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/pagination/limit/3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"pagination",
										"limit",
										"3"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Casts",
					"item": [
						{
							"name": "Get movie casts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/1/casts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"casts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add movie cast",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"actorId\": 5,\r\n    \"role\": \"Hulk\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/movies/1/casts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"casts"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Directors",
					"item": [
						{
							"name": "Get movie directors",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/1/directors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"directors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add movie director",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"directorId\": 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/movies/1/directors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"directors"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get All Movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5256ed8e-eaee-4275-8a27-fa46688f5aae",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const success = jsonData.success;\r",
									"\r",
									"pm.test(\"Expect response to be successful\", function () {\r",
									"    pm.expect(success).to.be.true;\r",
									"});\r",
									"\r",
									"const responseData = jsonData.data;\r",
									"\r",
									"pm.test(\"Expect data to not be null\", function () {\r",
									"    pm.expect(responseData === null).to.be.false;\r",
									"});\r",
									"\r",
									"const movies = responseData.movies;\r",
									"\r",
									"pm.test(\"Returned an array of movies.\", function () {\r",
									"    pm.expect(Array.isArray(movies)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Movies present\", function () {\r",
									"    pm.expect(movies.length).to.be.above(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Movie By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/-61",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"-61"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Movies Reviewes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/reviews/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"reviews",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable Movie",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/1/disable/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"1",
								"disable",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Movie Review By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/reviews/movie/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"reviews",
								"movie",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Movie",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"My new movie\",\r\n    \"year\": 2018,\r\n    \"time\": 135,\r\n    \"language\": \"English\",\r\n    \"country\": \"RD\",\r\n    \"distributor\": \"Universal Pictures\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Movies Copy",
			"item": [
				{
					"name": "Reviews",
					"item": [
						{
							"name": "Get Reviews",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/1/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Review",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"movieId\": 1,\r\n    \"reviewerStars\": 5,\r\n    \"comment\": \"Test review cmment for movie 2331516651\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/movies/1/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Review By Movie Id and Reviewer Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/1/reviews/reviewer/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"reviews",
										"reviewer",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Reviews By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/reviews/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"reviews",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Reviewers reviews",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/reviews/reviewer/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"reviews",
										"reviewer",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Pagination",
					"item": [
						{
							"name": "Get Movies With Offset",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/pagination/offset/3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"pagination",
										"offset",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Movies With Pagination offset and limit",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/pagination/limit/5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"pagination",
										"limit",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Movies Up To Limit",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/pagination/limit/3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"pagination",
										"limit",
										"3"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Casts",
					"item": [
						{
							"name": "Get movie casts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/1/casts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"casts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add movie cast",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"actorId\": 5,\r\n    \"role\": \"Hulk\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/movies/1/casts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"casts"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Directors",
					"item": [
						{
							"name": "Get movie directors",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/1/directors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"directors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add movie director",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"directorId\": 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/movies/1/directors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										"1",
										"directors"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get All Movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e938dfa-a956-47b2-9262-d99b670f28bd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const success = jsonData.success;\r",
									"\r",
									"pm.test(\"Expect response to be successful\", function () {\r",
									"    pm.expect(success).to.be.true;\r",
									"});\r",
									"\r",
									"const responseData = jsonData.data;\r",
									"\r",
									"pm.test(\"Expect data to not be null\", function () {\r",
									"    pm.expect(responseData === null).to.be.false;\r",
									"});\r",
									"\r",
									"const movies = responseData.movies;\r",
									"\r",
									"pm.test(\"Returned an array of movies.\", function () {\r",
									"    pm.expect(Array.isArray(movies)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Movies present\", function () {\r",
									"    pm.expect(movies.length).to.be.above(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Movie By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/-61",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"-61"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Movies Reviewes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/reviews/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"reviews",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable Movie",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/1/disable/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"1",
								"disable",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Movie Review By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/reviews/movie/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"reviews",
								"movie",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Movie",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"My new movie\",\r\n    \"year\": 2018,\r\n    \"time\": 135,\r\n    \"language\": \"English\",\r\n    \"country\": \"RD\",\r\n    \"distributor\": \"Universal Pictures\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Actors",
			"item": [
				{
					"name": "Get Actors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Actor By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actors/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Actor",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Jeremy2\",\r\n    \"lastName\": \"Then2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/actors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Actor By Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actors/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Directors",
			"item": [
				{
					"name": "Get Directors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/directors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"directors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Director By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/directors/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"directors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Director",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Jeremy\",\r\n    \"lastName\": \"Then\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/directors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"directors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Director By Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/directors/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"directors",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e2cc2acb-c376-4283-b14f-840ddfaad98e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "66050938-2692-4219-be63-4fb302ee768a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "954e2785-0d1d-44e7-8749-8c618927a9a8",
								"exec": [
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"var token = jsonData.data.token;\r",
									"\r",
									"console.log('token', token);\r",
									"\r",
									"pm.environment.set(\"token\", token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"jthen\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b0b0ba5-6cce-41f1-963c-997300e70f04",
								"exec": [
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"var token = jsonData.data.token;\r",
									"\r",
									"console.log('token', token);\r",
									"\r",
									"pm.environment.set(\"token\", token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"jthen\",\r\n    \"email\": \"jeremy@gmail.com\",\r\n    \"password\": \"123456\",\r\n    \"firstName\": \"Jeremy\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User By Username",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/jthen",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"jthen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/Elta_Johnson49",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"Elta_Johnson49"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Role",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Elta_Johnson49\",\r\n    \"role\": \"ADMIN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/Renee_Deckow/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"Renee_Deckow",
								"role"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}